#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\date{}
\usepackage{fancyhdr}
\pagestyle{fancy}
\renewcommand{\headrulewidth}{0pt}
\rfoot{\scriptsize Bryan Herman}
\usepackage{color}
\usepackage{algorithmic}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\bullet 0 0 0 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\noindent
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100line%"
height "1pt"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\shape smallcaps
\size giant
Problem Set 4
\end_layout

\begin_layout Standard
\align center

\size largest
22.S904 Nuclear Reactor Kinetics
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\align center

\size largest
Due: 15 October 2012
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\align center

\size largest
Bryan Herman
\end_layout

\begin_layout Standard
\noindent
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100line%"
height "1pt"

\end_inset


\end_layout

\begin_layout Section*
Diffusion Code
\end_layout

\begin_layout Standard
A general three-dimensional second order finite volume code was written
 to solve the neutron diffusion equation for both steady state and transient
 applications.
 
\series bold
The source code can be reviewed at:
\end_layout

\begin_layout Standard
\align center

\series bold
http://github.com/bhermanmit/Kinetics/tree/master/HW3/src
\series default
.
 
\end_layout

\begin_layout Section*
Derivation of Classical Point Kinetics
\end_layout

\begin_layout Standard
We can begin the derivation with the continuous energy form of the neutron
 diffusion equation and precursor balance equation:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{multline*}
\frac{1}{v\left(\vec{r},E\right)}\frac{\partial}{\partial t}\phi\left(\vec{r},E,t\right)=\nabla\cdot D\left(\vec{r},E,t\right)\nabla\phi\left(\vec{r},E,t\right)-\Sigma_{t}\left(\vec{r},E,t\right)\phi\left(\vec{r},E,t\right)\\
+\int_{0}^{\infty}dE^{\prime}\Sigma_{s}\left(\vec{r},E^{\prime}\rightarrow E,t\right)\phi\left(\vec{r},E^{\prime},t\right)\\
+\left[1-\beta\left(\vec{r}\right)\right]\frac{\chi^{p}\left(\vec{r},E\right)}{k_{crit}}\int_{0}^{\infty}dE^{\prime}\nu\Sigma_{s}\left(\vec{r},E^{\prime},t\right)\phi\left(\vec{r},E^{\prime},t\right)+\sum_{i}\chi_{i}^{d}\left(\vec{r},E\right)\lambda_{i}\mathcal{C}_{i}\left(\vec{r},t\right)\qquad g=1,...,G
\end{multline*}

\end_inset


\begin_inset Formula 
\[
\frac{\partial}{\partial t}\mathcal{C}_{i}\left(\vec{r},t\right)=-\lambda_{i}\mathcal{C}_{i}\left(\vec{r},t\right)+\frac{\beta_{i}\left(\vec{r}\right)}{k_{crit}}\int_{0}^{\infty}dE^{\prime}\nu\Sigma_{f}\left(\vec{r},E^{\prime},t\right)\phi\left(\vec{r},E^{\prime},t\right)\qquad i=1,...,I.
\]

\end_inset

 For classical point kinetics, we assume that the flux can be separated
 into a space/energy term and a time dependent term:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\phi\left(\vec{r},E,t\right)=\mathcal{S}\left(\vec{r},E\right)\mathcal{T}\left(t\right)
\]

\end_inset

 Substituting this into the spatial kinetics equation we get
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{multline*}
\frac{1}{v\left(\vec{r},E\right)}\mathcal{S}\left(\vec{r},E\right)\frac{\partial}{\partial t}\mathcal{T}\left(t\right)=\mathcal{T}\left(t\right)\nabla\cdot D\left(\vec{r},E,t\right)\nabla\mathcal{S}\left(\vec{r},E\right)-\Sigma_{t}\left(\vec{r},E,t\right)\mathcal{S}\left(\vec{r},E\right)\mathcal{T}\left(t\right)+\\
\int_{0}^{\infty}dE^{\prime}\Sigma_{s}\left(\vec{r},E^{\prime}\rightarrow E,t\right)\mathcal{S}\left(\vec{r},E^{\prime}\right)\mathcal{T}\left(t\right)+\left[1-\beta\left(\vec{r}\right)\right]\frac{\chi^{p}\left(\vec{r},E\right)}{k_{crit}}\int_{0}^{\infty}dE^{\prime}\nu\Sigma_{f}\left(\vec{r},E^{\prime},t\right)\mathcal{S}\left(\vec{r},E^{\prime}\right)\mathcal{T}\left(t\right)\\
+\sum_{i}\chi_{i}^{d}\left(\vec{r},E\right)\lambda_{i}\mathcal{C}_{i}\left(\vec{r},t\right)
\end{multline*}

\end_inset

 We now define some terms:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\overline{\left(\frac{1}{v}\right)}\equiv\int_{V}dV\int_{0}^{\infty}dE\frac{\mathcal{S}\left(\vec{r},E\right)}{v\left(\vec{r},E\right)}
\]

\end_inset

 
\begin_inset Formula 
\[
\nu_{p}\Sigma_{f}\left(t\right)\equiv\int_{V}dV\int_{0}^{\infty}dE\left[1-\beta\left(\vec{r}\right)\right]\chi^{p}\left(\vec{r},E\right)\int_{0}^{\infty}dE^{\prime}\nu\Sigma_{f}\left(\vec{r},E^{\prime},t\right)\mathcal{S}\left(\vec{r},E^{\prime}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\nu_{d}\Sigma_{f,i}\left(t\right)\equiv\int_{V}dV\int_{0}^{\infty}dE\beta_{i}\left(\vec{r}\right)\chi_{i}^{d}\left(\vec{r},E\right)\int_{0}^{\infty}dE^{\prime}\nu\Sigma_{f}\left(\vec{r},E^{\prime},t\right)\mathcal{S}\left(\vec{r},E^{\prime}\right)
\]

\end_inset

 
\begin_inset Formula 
\[
\nu_{d}\Sigma_{f}\left(t\right)\equiv\int_{V}dV\int_{0}^{\infty}dE\sum_{i}\beta_{i}\left(\vec{r}\right)\chi_{i}^{d}\left(\vec{r},E\right)\int_{0}^{\infty}dE^{\prime}\nu\Sigma_{f}\left(\vec{r},E^{\prime},t\right)\mathcal{S}\left(\vec{r},E^{\prime}\right)
\]

\end_inset


\begin_inset Formula 
\[
\nu\Sigma_{f}\left(t\right)\equiv\nu_{p}\Sigma_{f}\left(t\right)+\nu_{d}\Sigma_{f}\left(t\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\Sigma_{a}\left(t\right)\equiv\int_{V}dV\int_{0}^{\infty}dE\left[\Sigma_{t}\left(\vec{r},E,t\right)-\int_{0}^{\infty}dE^{\prime}\Sigma_{s}\left(\vec{r},E^{\prime}\rightarrow E,t\right)\mathcal{S}\left(\vec{r},E^{\prime}\right)\right]
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
L\left(t\right)\equiv\int_{V}dV\int_{0}^{\infty}dE\nabla\cdot D\left(\vec{r},E,t\right)\nabla\mathcal{S}\left(\vec{r},E\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
C_{i}\left(t\right)\equiv\int_{V}dV\mathcal{C}_{i}\left(\vec{r},t\right)
\]

\end_inset

 We can now re-write both the spatial kinetics equation and precursor balance
 equation in this integral form:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\overline{\left(\frac{1}{v}\right)}\frac{d}{dt}\mathcal{T}\left(t\right)=\left[\frac{1}{k_{crit}}\nu_{p}\Sigma_{f}\left(t\right)+L\left(t\right)-\Sigma_{a}\left(t\right)\right]\mathcal{T}\left(t\right)+\sum_{i}\lambda_{i}C_{i}\left(t\right)
\]

\end_inset


\begin_inset Formula 
\[
\frac{d}{dt}C_{i}\left(t\right)=-\lambda_{i}C_{i}\left(t\right)+\frac{1}{k_{crit}}\nu_{d}\Sigma_{f,i}\left(t\right)\mathcal{T}\left(t\right)
\]

\end_inset

 The term 
\begin_inset Formula $1/k_{crit}\cdot\nu_{d}\Sigma_{f}\left(t\right)$
\end_inset

 can be added and subtracted from the term within the brackets to get
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\overline{\left(\frac{1}{v}\right)}\frac{d}{dt}\mathcal{T}\left(t\right)=\left[\frac{1}{k_{crit}}\nu_{p}\Sigma_{f}\left(t\right)+\frac{1}{k_{crit}}\nu_{d}\Sigma_{f}\left(t\right)+L\left(t\right)-\Sigma_{a}\left(t\right)-\frac{1}{k_{crit}}\nu_{d}\Sigma_{f}\left(t\right)\right]\mathcal{T}\left(t\right)+\sum_{i}\lambda_{i}C_{i}\left(t\right)
\]

\end_inset

 Now, we can divide the kinetics equation and the precursor equation by
 
\begin_inset Formula $1/k_{crit}\cdot\nu\Sigma_{f}\left(t\right)$
\end_inset

, 
\begin_inset Formula 
\[
\overline{\left(\frac{1}{v}\right)}\frac{1}{\nu\Sigma_{f}\left(t\right)}\frac{d}{dt}\mathcal{T}\left(t\right)=\left[\frac{\frac{1}{k_{crit}}\nu\Sigma_{f}\left(t\right)-\Sigma_{a}\left(t\right)+L\left(t\right)}{\frac{1}{k_{crit}}\nu\Sigma_{f}\left(t\right)}-\frac{\nu_{d}\Sigma_{f}\left(t\right)}{\nu\Sigma_{f}\left(t\right)}\right]\mathcal{T}\left(t\right)+\frac{1}{\nu\Sigma_{f}\left(t\right)}\sum_{i}\lambda_{i}C_{i}\left(t\right)
\]

\end_inset

 
\begin_inset Formula 
\[
\frac{d}{dt}\frac{C_{i}\left(t\right)}{\frac{1}{k_{crit}}\nu\Sigma_{f}\left(t\right)}=-\lambda_{i}\frac{C_{i}\left(t\right)}{\frac{1}{k_{crit}}\nu\Sigma_{f}\left(t\right)}+\frac{\nu_{d}\Sigma_{f,i}\left(t\right)}{\nu\Sigma_{f}\left(t\right)}\mathcal{T}\left(t\right)
\]

\end_inset

 As you can see, the precursor concentration is now divided by a normalized
 fission rate.
 We can make a different definition of precursor concentration as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\zeta_{i}\left(t\right)\equiv\frac{C_{i}\left(t\right)}{\frac{1}{k_{crit}}\nu\Sigma_{f}\left(t\right)}
\]

\end_inset

 We can also make further definitions of parameters:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\Lambda\left(t\right)\equiv\overline{\left(\frac{1}{v}\right)}\frac{1}{\nu\Sigma_{f}\left(t\right)}
\]

\end_inset

 
\begin_inset Formula 
\[
\rho\left(t\right)\equiv\frac{\frac{1}{k_{crit}}\nu\Sigma_{f}\left(t\right)-\Sigma_{a}\left(t\right)+L\left(t\right)}{\frac{1}{k_{crit}}\nu\Sigma_{f}\left(t\right)}
\]

\end_inset

 
\begin_inset Formula 
\[
\beta_{i}\left(t\right)\equiv\frac{\nu_{d}\Sigma_{f,i}\left(t\right)}{\nu\Sigma_{f}\left(t\right)}
\]

\end_inset


\begin_inset Formula 
\[
\beta\left(t\right)=\frac{\nu_{d}\Sigma_{f}\left(t\right)}{\nu\Sigma_{f}\left(t\right)}
\]

\end_inset

 Both equations can now be re-written as
\begin_inset Formula 
\begin{equation}
\Lambda\left(t\right)\frac{d}{dt}\mathcal{T}\left(t\right)=\left[\rho\left(t\right)-\beta\left(t\right)\right]\mathcal{T}\left(t\right)+\sum_{i}\lambda_{i}\zeta_{i}\left(t\right)\label{eq:newK}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\frac{d}{dt}\zeta_{i}\left(t\right)=-\lambda_{i}\zeta_{i}\left(t\right)+\beta_{i}\left(t\right)\mathcal{T}\left(t\right)\label{eq:newC}
\end{equation}

\end_inset

 As you can see, this result does not agree with the form of the classical
 point kinetics equations.
 To obtain the classical form we make the following definition
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
c_{i}\left(t\right)=\frac{1}{\Lambda\left(t\right)}\zeta_{i}\left(t\right)
\]

\end_inset

 We can substitute this into both equations,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{d}{dt}\mathcal{T}\left(t\right)=\frac{\rho\left(t\right)-\beta\left(t\right)}{\Lambda\left(t\right)}\mathcal{T}\left(t\right)+\sum_{i}\lambda_{i}c_{i}\left(t\right)
\]

\end_inset

 
\begin_inset Formula 
\[
\frac{d}{dt}\Lambda\left(t\right)c_{i}\left(t\right)=-\lambda_{i}\Lambda\left(t\right)c_{i}\left(t\right)+\beta_{i}\left(t\right)\mathcal{T}\left(t\right)
\]

\end_inset

 In the precursor balance equation, we can not arrive at the form in most
 textbooks unless we assume that the prompt neutron lifetime is not changing
 with time.
 We already implicitly assumed that the velocity does not depend on time
 when we removed from the time derivative in the kinetics equation.
 So inorder to make 
\begin_inset Formula $\Lambda$
\end_inset

 time independent we have to assume that the fission cross sections are
 not changing with time as well.
 Now we can arrive at the classical form:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{d}{dt}\mathcal{T}\left(t\right)=\frac{\rho\left(t\right)-\beta}{\Lambda}\mathcal{T}\left(t\right)+\sum_{i}\lambda_{i}c_{i}\left(t\right)\label{eq:oldK}
\end{equation}

\end_inset

 
\begin_inset Formula 
\begin{equation}
\frac{d}{dt}c_{i}\left(t\right)=-\lambda_{i}c_{i}\left(t\right)+\frac{\beta_{i}}{\Lambda}\mathcal{T}\left(t\right)\label{eq:oldC}
\end{equation}

\end_inset


\end_layout

\begin_layout Section*
Derivation of General Multigroup Point Kinetics
\end_layout

\begin_layout Standard
For this derivation, we will start with the multigroup form of the point
 kinetics equations:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{multline*}
\frac{1}{v_{g}\left(\vec{r}\right)}\frac{\partial}{\partial t}\phi_{g}\left(\vec{r},t\right)=\nabla\cdot D_{g}\left(\vec{r},t\right)\nabla\phi_{g}\left(\vec{r},t\right)-\Sigma_{tg}\left(\vec{r},t\right)\phi_{g}\left(\vec{r},t\right)+\sum_{h}\Sigma_{s,h\rightarrow g}\left(\vec{r},t\right)\phi_{h}\left(\vec{r},t\right)\\
+\left[1-\beta\left(\vec{r}\right)\right]\frac{\chi_{g}^{p}\left(\vec{r}\right)}{k_{crit}}\sum_{h}\nu\Sigma_{fh}\left(\vec{r},t\right)\phi_{h}\left(\vec{r},t\right)+\sum_{i}\chi_{ig}^{d}\left(\vec{r}\right)\lambda_{i}\mathcal{C}_{i}\left(\vec{r},t\right)\qquad g=1,...,G
\end{multline*}

\end_inset


\begin_inset Formula 
\[
\frac{\partial}{\partial t}\mathcal{C}_{i}\left(\vec{r},t\right)=-\lambda_{i}\mathcal{C}_{i}\left(\vec{r},t\right)+\frac{\beta_{i}\left(\vec{r}\right)}{k_{crit}}\sum_{h}\nu\Sigma_{fh}\left(\vec{r},t\right)\phi_{h}\left(\vec{r},t\right)\qquad i=1,...,I
\]

\end_inset

 Unlike in the classical derivation, we will derive this equation with a
 weighting function.
 A similar derivation can be applied for classical point kinetics shown
 above.
 We again separate the flux into a space-energy and time-energy component,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\phi_{g}\left(\vec{r},t\right)=\mathcal{S}_{g}\left(\vec{r}\right)\mathcal{T}_{g}\left(t\right)
\]

\end_inset

 We can substitute this back into the original equation
\begin_inset Formula 
\begin{multline*}
\frac{1}{v_{g}\left(\vec{r}\right)}\mathcal{S}_{g}\left(\vec{r}\right)\frac{d}{dt}\mathcal{T}_{g}\left(t\right)=\mathcal{T}_{g}\left(t\right)\nabla\cdot D_{g}\left(\vec{r},t\right)\nabla\mathcal{S}_{g}\left(\vec{r}\right)-\Sigma_{tg}\left(\vec{r},t\right)\mathcal{S}_{g}\left(\vec{r}\right)\mathcal{T}_{g}\left(t\right)+\sum_{h}\Sigma_{s,h\rightarrow g}\left(\vec{r},t\right)\mathcal{S}_{h}\left(\vec{r}\right)\mathcal{T}_{h}\left(t\right)+\\
\left[1-\beta\left(\vec{r}\right)\right]\frac{\chi_{g}^{p}\left(\vec{r}\right)}{k_{crit}}\sum_{h}\nu\Sigma_{fh}\left(\vec{r},t\right)\mathcal{S}_{h}\left(\vec{r}\right)\mathcal{T}_{h}\left(t\right)+\sum_{i}\chi_{ig}^{d}\left(\vec{r}\right)\lambda_{i}\mathcal{C}_{i}\left(\vec{r},t\right)
\end{multline*}

\end_inset

 A weight function is now multiplied through in both equations
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{multline*}
w_{g}\left(\vec{r}\right)\frac{1}{v_{g}\left(\vec{r}\right)}\mathcal{S}_{g}\left(\vec{r}\right)\frac{\partial}{\partial t}\mathcal{T}_{g}\left(t\right)=w_{g}\left(\vec{r}\right)\mathcal{T}_{g}\left(t\right)\nabla\cdot D_{g}\left(\vec{r},t\right)\nabla\mathcal{S}_{g}\left(\vec{r}\right)-\\
w_{g}\left(\vec{r}\right)\Sigma_{tg}\left(\vec{r},t\right)\mathcal{S}_{g}\left(\vec{r}\right)\mathcal{T}_{g}\left(t\right)+w_{g}\left(\vec{r}\right)\sum_{h}\Sigma_{s,h\rightarrow g}\left(\vec{r},t\right)\mathcal{S}_{h}\left(\vec{r}\right)\mathcal{T}_{h}\left(t\right)+\\
w_{g}\left(\vec{r}\right)\left[1-\beta\left(\vec{r}\right)\right]\frac{\chi_{g}^{p}\left(\vec{r}\right)}{k_{crit}}\sum_{h}\nu\Sigma_{f,h}\left(\vec{r},t\right)\mathcal{S}_{h}\left(\vec{r}\right)\mathcal{T}_{h}\left(t\right)+w_{g}\left(\vec{r}\right)\sum_{i}\chi_{ig}^{d}\left(\vec{r}\right)\lambda_{i}\mathcal{C}_{i}\left(\vec{r},t\right)
\end{multline*}

\end_inset

 
\begin_inset Formula 
\[
w_{g}\left(\vec{r}\right)\frac{\partial}{\partial t}\mathcal{C}_{i}\left(\vec{r},t\right)=-w_{g}\left(\vec{r}\right)\lambda_{i}\mathcal{C}_{i}\left(\vec{r},t\right)+w_{g}\left(\vec{r}\right)\frac{\beta_{i}\left(\vec{r}\right)}{k_{crit}}\sum_{h}\nu\Sigma_{fh}\left(\vec{r},t\right)\mathcal{S}_{h}\left(\vec{r}\right)\mathcal{T}_{h}\left(t\right)
\]

\end_inset

 We can now define a bunch of terms like before:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\overline{\left(\frac{1}{v_{g}}\right)}=\int_{V}dVw_{g}\left(\vec{r}\right)\frac{1}{v_{g}\left(\vec{r}\right)}\mathcal{S}_{g}\left(\vec{r}\right)
\]

\end_inset

 
\begin_inset Formula 
\[
\nu_{p}\Sigma_{f,h\rightarrow g}\left(t\right)\equiv\int_{V}dVw_{g}\left(\vec{r}\right)\left[1-\beta\left(\vec{r}\right)\right]\frac{\chi_{g}^{p}\left(\vec{r}\right)}{k_{crit}}\nu\Sigma_{fh}\left(\vec{r},t\right)\mathcal{S}_{h}\left(\vec{r}\right)
\]

\end_inset

 
\begin_inset Formula 
\[
\nu_{d}\Sigma_{f,i,h\rightarrow g}\left(t\right)\equiv\int_{V}dVw_{g}\left(\vec{r}\right)\beta_{i}\left(\vec{r}\right)\frac{\chi_{g,i}^{d}\left(\vec{r}\right)}{k_{crit}}\nu\Sigma_{fh}\left(\vec{r},t\right)\mathcal{S}_{h}\left(\vec{r}\right)
\]

\end_inset


\begin_inset Formula 
\[
\nu_{d}\Sigma_{f,h\rightarrow g}\left(t\right)\equiv\int_{V}dVw_{g}\left(\vec{r}\right)\sum_{i}\beta_{i}\left(\vec{r}\right)\frac{\chi_{g,i}^{d}\left(\vec{r}\right)}{k_{crit}}\nu\Sigma_{fh}\left(\vec{r},t\right)\mathcal{S}_{h}\left(\vec{r}\right)
\]

\end_inset


\begin_inset Formula 
\[
\Sigma_{tg}\left(t\right)\equiv\int_{V}dVw_{g}\left(\vec{r}\right)\Sigma_{tg}\left(\vec{r},t\right)\mathcal{S}_{g}\left(\vec{r}\right)
\]

\end_inset


\begin_inset Formula 
\[
\Sigma_{s,h\rightarrow g}\left(t\right)\equiv\int_{V}dVw_{g}\left(\vec{r}\right)\Sigma_{s,h\rightarrow g}\left(\vec{r},t\right)\mathcal{S}_{h}\left(\vec{r}\right)
\]

\end_inset

 
\begin_inset Formula 
\[
L_{g}\left(t\right)=\int_{V}dVw_{g}\left(\vec{r}\right)\nabla\cdot D_{g}\left(\vec{r},t\right)\nabla\mathcal{S}_{g}\left(\vec{r}\right)
\]

\end_inset

 
\begin_inset Formula 
\[
C_{i,g}\left(t\right)\equiv\int_{V}dVw_{g}\left(\vec{r}\right)\chi_{ig}^{d}\left(\vec{r}\right)\mathcal{C}_{i}\left(\vec{r},t\right)
\]

\end_inset

 Substituting in all of these parameters 
\begin_inset Formula 
\begin{multline}
\overline{\left(\frac{1}{v_{g}}\right)}\frac{d}{dt}\mathcal{T}_{g}\left(t\right)=L_{g}\left(t\right)\mathcal{T}_{g}\left(t\right)-\Sigma_{tg}\left(t\right)\mathcal{T}_{g}\left(t\right)+\sum_{h}\Sigma_{s,h\rightarrow g}\left(t\right)\mathcal{T}_{h}\left(t\right)\\
+\sum_{h}\nu_{p}\Sigma_{f,h\rightarrow g}\mathcal{T}_{h}\left(t\right)+\sum_{i}\chi_{ig}^{d}\left(\vec{r}\right)\lambda_{i}C_{i,g}\left(t\right)\label{eq:GPKEK}
\end{multline}

\end_inset

 
\begin_inset Formula 
\begin{equation}
\frac{d}{dt}C_{i,g}\left(\vec{r}\right)=-\lambda_{i}C_{i,g}\left(\vec{r}\right)+\frac{\chi_{ig}^{d}}{k_{crit}}\sum_{h}\nu_{d}\Sigma_{fh}\left(\vec{r}\right)\mathcal{S}_{h}\left(\vec{r}\right)\mathcal{T}_{h}\left(t\right)\label{eq:GPKEC}
\end{equation}

\end_inset

 These are the multigroup point kinetics equations that can easily be solved
 with the matrix exponential method.
 In discretized form for 2 groups this would be:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathbf{dT}=\mathbf{v}\mathbb{A}^{p}\mathbf{T}+\mathbf{v}\sum_{i}\lambda_{i}\mathbf{C}_{i}
\]

\end_inset

 
\begin_inset Formula 
\[
\mathbf{dC}_{i}=-\lambda_{i}\mathbf{C}_{i}+\mathbb{A}^{d}\mathbf{T}
\]

\end_inset

 We define the elements of the net production matrices for prompt and delayed
 neutrons are:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathbb{A}_{g,h}^{p}\equiv\left\{ \mathbf{w}_{g}\cdot\left[\frac{1-\beta}{k_{crit}}\mathbb{F}_{g,h}-\mathbb{M}_{g,h}\right]\mathbf{S}_{h}\right\} 
\]

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathbb{A}_{g,h}^{d}\equiv\left\{ \mathbf{w}_{g}\cdot\frac{\beta}{k_{crit}}\mathbb{F}_{g,h}\mathbf{S}_{h}\right\} 
\]

\end_inset

 We also have a diagonal matrix of effecitve inverse velocities
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathbf{v}=\mathrm{diag}\left\{ \overline{\left(\frac{1}{v_{g}}\right)}\right\} \qquad g=1...G
\]

\end_inset


\end_layout

\begin_layout Section*
Shape Functions
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../../HW2/partF/adjoint_unrod.pdf

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../../HW2/partF/adjoint_rod.pdf

\end_inset


\end_layout

\begin_layout Section*
Results of Point Kinetics
\end_layout

\begin_layout Subsection*
Comparison of PKEs with EXACT parameters from Spatial Kinetics
\end_layout

\begin_layout Standard
It is very important that we can generate the exact solution from classical
 point kinetics and general point kinetics.
 We should two plots here: one is unity weighted and the other is adjoint
 weighted with a constant steady state rod-in adjoint solution.
 They all agree with the reference very well.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../exact_unity/power_exact_unity.pdf

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../exact_adj/power_exact_adj.pdf

\end_inset

 
\end_layout

\begin_layout Subsection*
Comparison of Time-Dependent Prompt Neutron Lifetimes
\end_layout

\begin_layout Standard
When I first did a comparison of time dependent PNLs using Eqs.
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:oldK"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:oldC"

\end_inset

, I noticed that I got a worse answer.
 These are the equations that are presented in the notes.
 Upon derivation of the PKEs, I noticed an inconsistency on where the PNL
 terms were located.
 These are shown in Eqs.
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:newK"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:newC"

\end_inset

.
 In order to derive the form that is in the notes, I had to assume that
 PNL could be taken out of the time-derivative in the precursor balance
 equation.
 If PNL is time-dependent, this cannot be done and thus the equation in
 the notes is mis-leading.
 I therefore implemented Eqs.
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:newK"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:newC"

\end_inset

 in my PKE solver and obtained the plots below.
 As you can see, with my definition of PKEs, I get the same error when use
 time-dependent PNL as compared with static PNL.
 With the definition in the notes I get a worser result.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../exact_pnl/power_exact_unity.pdf

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../exact_pnl/error_exact_unity.pdf

\end_inset


\end_layout

\begin_layout Subsection*
Comparison of Rod In Shape Function with Unity Weighting
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../rodin_unity/power_rodin_unity.pdf

\end_inset


\end_layout

\begin_layout Standard
\noindent
We can write down the reactivity for this situations in operator notation:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\rho=\frac{\mathbf{1}\cdot\left(\frac{1}{k_{rodin}}\mathbb{F}_{rodin}-\mathbb{M}_{rodin}\right)\mathbf{\Phi}_{rodin}}{\mathbf{1}\cdot\frac{1}{k_{rodin}}\mathbb{F}_{rodin}\mathbf{\Phi}_{rodin}}
\]

\end_inset

 Since the shape function is consistent with the operators and the eigenvalue,
 the numerator will be zero and steady state will be held.
 A similar explanation can be given for the two group PKEs.
 If the same shape function is consistent with the shape of the steady state
 flux and eigenvalue, the equations will have to balance.
 See Eqs.
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:GPKEK"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:GPKEC"

\end_inset

.
\end_layout

\begin_layout Subsection*
Comparison of Rod In Shape Function with Rod in Adjoint Weighting
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../rodin_inadjoint/power_rodin_inadjoint.pdf

\end_inset


\end_layout

\begin_layout Standard
\noindent
A similar explanation can be given here as in unity weighting.
 Here the reactivity is 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\rho=\frac{\mathbf{\Phi}_{rodin}^{\dagger}\cdot\left(\frac{1}{k_{rodin}}\mathbb{F}_{rodin}-\mathbb{M}_{rodin}\right)\mathbf{\Phi}_{rodin}}{\mathbf{\Phi}_{rodin}^{\dagger}\cdot\frac{1}{k_{rodin}}\mathbb{F}_{rodin}\mathbf{\Phi}_{rodin}}
\]

\end_inset

 The numerator in this formula will still be zero before we perform the
 dot product.
 The same goes for the two-group PKEs.
 Balance already exists before we apply the adjoint weighting.
 
\end_layout

\begin_layout Subsection*
Comparison of Rod Out Shape Function with Unity Weighting
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../rodout_unity/power_rodout_unity.pdf

\end_inset


\end_layout

\begin_layout Standard
\noindent
The reactivity in this situation is given as 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\rho=\frac{\mathbf{1}\cdot\left(\frac{1}{k_{rodin}}\mathbb{F}_{rodin}-\mathbb{M}_{rodin}\right)\mathbf{\Phi}_{rodout}}{\mathbf{1}\cdot\frac{1}{k_{rodin}}\mathbb{F}_{rodin}\mathbf{\Phi}_{rodout}}
\]

\end_inset

 Since the rod out shape function critical eigenvalue is larger than the
 rod in, there will be more fissions than leakage and absorptions.
 This will result in a net positive numerator and leads to a positive reactivity.
 Thus, we see an initial increase in the Classic PKE solution.
 It may look like the 2-group solution is also at steady state, however
 we can zoom in and see that it is not.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename /home/bherman/Dropbox/Kinetics/HW4/rodout_unity/power_rodout_unity_zoom.pdf

\end_inset


\end_layout

\begin_layout Standard
We see that using a shape funciton that is not consistent with the balance
 of neutrons with the steady state solution results in a noticeable change
 in core power.
 It is worth noting that it is much less than the Classic PKEs.
\end_layout

\begin_layout Subsection*
Comparison of Rod Out Shape Function with Rod Out Adjoint Weighting
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../rodout_outadjoint/power_rodout_outadjoint.pdf

\end_inset


\end_layout

\begin_layout Standard
\noindent
The reactivity here is 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\rho=\frac{\mathbf{\Phi}_{rodout}^{\dagger}\cdot\left(\frac{1}{k_{rodin}}\mathbb{F}_{rodin}-\mathbb{M}_{rodin}\right)\mathbf{\Phi}_{rodout}}{\mathbf{\Phi}_{rodout}^{\dagger}\cdot\frac{1}{k_{rodin}}\mathbb{F}_{rodin}\mathbf{\Phi}_{rodout}}
\]

\end_inset

 Mathematically, the adjoint weight function makes the loss term greater
 in this equation than the production term.
 This gives us a net negative numerator and reactivity.
 Thus, we see the core power drop.
 This same behavior will be present in the two group formulation of PKEs.
\end_layout

\begin_layout Subsection*
Comparison of Rod In Shape Function with Rod Out Adjoint Weighting
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../rodin_outadjoint/power_rodin_outadjoint.pdf

\end_inset


\end_layout

\begin_layout Standard
\noindent
The reactivity for this situation is
\begin_inset Formula 
\[
\rho=\frac{\mathbf{\Phi}_{rodout}^{\dagger}\cdot\left(\frac{1}{k_{rodin}}\mathbb{F}_{rodin}-\mathbb{M}_{rodin}\right)\mathbf{\Phi}_{rodin}}{\mathbf{\Phi}_{rodout}^{\dagger}\cdot\frac{1}{k_{rodin}}\mathbb{F}_{rodin}\mathbf{\Phi}_{rodin}}
\]

\end_inset

 Similar to the explanation before, multiplying the exact shape function
 that is consistent with the steady state solution will balance the numerator.
 The same goes for the 2-group PKEs.
 Thus, no matter what the weight function is we will get zero and constant
 power.
\end_layout

\begin_layout Subsection*
Comparison of Rod Out Shape Function with Rod In Adjoint Weighting
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ../rodout_inadjoint/power_rodout_inadjoint.pdf

\end_inset


\end_layout

\begin_layout Standard
\noindent
The reactivity for this situation is
\begin_inset Formula 
\[
\rho=\frac{\mathbf{\Phi}_{rodin}^{\dagger}\cdot\left(\frac{1}{k_{rodin}}\mathbb{F}_{rodin}-\mathbb{M}_{rodin}\right)\mathbf{\Phi}_{rodout}}{\mathbf{\Phi}_{rodin}^{\dagger}\cdot\frac{1}{k_{rodin}}\mathbb{F}_{rodin}\mathbf{\Phi}_{rodout}}
\]

\end_inset

 From this equation it may seem like the reactivity will not be zero because
 we are multiplying by a shape function that is inconsistent with the steady
 state rod in solution.
 However, we can use adjoint theory to form an equivalent operator,
\end_layout

\begin_layout Standard
\noindent
\begin_inset Formula 
\[
\rho=\frac{\mathbf{\Phi}_{rodout}\cdot\left(\frac{1}{k_{rodin}}\mathbb{F}_{rodin}^{\dagger}-\mathbb{M}_{rodin}^{\dagger}\right)\mathbf{\Phi}_{rodin}^{\dagger}}{\mathbf{\Phi}_{rodout}\cdot\frac{1}{k_{rodin}}\mathbb{F}_{rodin}^{\dagger}\mathbf{\Phi}_{rodin}^{\dagger}}
\]

\end_inset

 Since we are using the mathematical adjoint, we are guaranteed to get the
 same eigenvalue from that steady state solution.
 Thus, 
\begin_inset Formula $k_{rodin}$
\end_inset

 will balance the adjoint fission matrix.
 So here, we are actually using a shape function that is consistent with
 the balance of the adjoint equations.
 Thus, the numerator balances to zero and we get a zero reactivity.
 This same explanation can be used for 2-group PKEs.
\end_layout

\end_body
\end_document
